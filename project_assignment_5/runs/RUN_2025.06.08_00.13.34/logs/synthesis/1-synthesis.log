
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: /Users/berkkilic/.volare/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu_top/src/instruction_memory.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu_top/src/instruction_memory.v' to AST representation.
Storing AST representation for module `$abstract\instruction_memory'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu_top/src/lab6_testbench.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu_top/src/lab6_testbench.v' to AST representation.
Storing AST representation for module `$abstract\tb_semi_cpu_complete'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu_top/src/program_counter.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu_top/src/program_counter.v' to AST representation.
Storing AST representation for module `$abstract\program_counter'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu_top/src/instruction_decoder.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu_top/src/instruction_decoder.v' to AST representation.
Storing AST representation for module `$abstract\instruction_decoder'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu_top/src/alu.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu_top/src/alu.v' to AST representation.
Storing AST representation for module `$abstract\alu'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu_top/src/semi_cpu_top.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu_top/src/semi_cpu_top.v' to AST representation.
Storing AST representation for module `$abstract\semi_cpu_top'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu_top/src/seven_segment_display.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu_top/src/seven_segment_display.v' to AST representation.
Storing AST representation for module `$abstract\seven_segment_display'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu_top/src/register_file.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu_top/src/register_file.v' to AST representation.
Storing AST representation for module `$abstract\register_file'.
Successfully finished Verilog frontend.

10. Executing HIERARCHY pass (managing design hierarchy).

11. Executing AST frontend in derive mode using pre-parsed AST for module `\semi_cpu_top'.
Generating RTLIL representation for module `\semi_cpu_top'.

11.1. Analyzing design hierarchy..
Top module:  \semi_cpu_top

11.2. Executing AST frontend in derive mode using pre-parsed AST for module `\seven_segment_display'.
Generating RTLIL representation for module `\seven_segment_display'.

11.3. Executing AST frontend in derive mode using pre-parsed AST for module `\alu'.
Generating RTLIL representation for module `\alu'.

11.4. Executing AST frontend in derive mode using pre-parsed AST for module `\register_file'.
Generating RTLIL representation for module `\register_file'.

11.5. Executing AST frontend in derive mode using pre-parsed AST for module `\instruction_decoder'.
Generating RTLIL representation for module `\instruction_decoder'.

11.6. Executing AST frontend in derive mode using pre-parsed AST for module `\instruction_memory'.
Generating RTLIL representation for module `\instruction_memory'.

11.7. Executing AST frontend in derive mode using pre-parsed AST for module `\program_counter'.
Generating RTLIL representation for module `\program_counter'.

11.8. Analyzing design hierarchy..
Top module:  \semi_cpu_top
Used module:     \seven_segment_display
Used module:     \alu
Used module:     \register_file
Used module:     \instruction_decoder
Used module:     \instruction_memory
Used module:     \program_counter

11.9. Analyzing design hierarchy..
Top module:  \semi_cpu_top
Used module:     \seven_segment_display
Used module:     \alu
Used module:     \register_file
Used module:     \instruction_decoder
Used module:     \instruction_memory
Used module:     \program_counter
Removing unused module `$abstract\register_file'.
Removing unused module `$abstract\seven_segment_display'.
Removing unused module `$abstract\semi_cpu_top'.
Removing unused module `$abstract\alu'.
Removing unused module `$abstract\instruction_decoder'.
Removing unused module `$abstract\program_counter'.
Removing unused module `$abstract\tb_semi_cpu_complete'.
Removing unused module `$abstract\instruction_memory'.
Removed 8 unused modules.
Module alu directly or indirectly displays text -> setting "keep" attribute.
Module seven_segment_display directly or indirectly displays text -> setting "keep" attribute.
Module semi_cpu_top directly or indirectly displays text -> setting "keep" attribute.
Module program_counter directly or indirectly displays text -> setting "keep" attribute.

12. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/semi_cpu_top/runs/RUN_2025.06.08_00.13.34/tmp/synthesis/hierarchy.dot'.
Dumping module semi_cpu_top to page 1.
Renaming module semi_cpu_top to semi_cpu_top.

13. Executing TRIBUF pass.

14. Executing HIERARCHY pass (managing design hierarchy).

14.1. Analyzing design hierarchy..
Top module:  \semi_cpu_top
Used module:     \seven_segment_display
Used module:     \alu
Used module:     \register_file
Used module:     \instruction_decoder
Used module:     \instruction_memory
Used module:     \program_counter

14.2. Analyzing design hierarchy..
Top module:  \semi_cpu_top
Used module:     \seven_segment_display
Used module:     \alu
Used module:     \register_file
Used module:     \instruction_decoder
Used module:     \instruction_memory
Used module:     \program_counter
Removed 0 unused modules.
Module semi_cpu_top directly or indirectly displays text -> setting "keep" attribute.
Module alu directly or indirectly displays text -> setting "keep" attribute.
Module seven_segment_display directly or indirectly displays text -> setting "keep" attribute.
Module program_counter directly or indirectly displays text -> setting "keep" attribute.

15. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

16. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148 in module instruction_decoder.
Marked 3 switch rules as full_case in process $proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148 in module instruction_decoder.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/semi_cpu_top/src/register_file.v:18$74 in module register_file.
Removed 1 dead cases from process $proc$/openlane/designs/semi_cpu_top/src/alu.v:11$24 in module alu.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/semi_cpu_top/src/alu.v:11$24 in module alu.
Removed 1 dead cases from process $proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:61$20 in module seven_segment_display.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:61$20 in module seven_segment_display.
Removed 1 dead cases from process $proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:46$19 in module seven_segment_display.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:46$19 in module seven_segment_display.
Removed 1 dead cases from process $proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:31$18 in module seven_segment_display.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:31$18 in module seven_segment_display.
Marked 3 switch rules as full_case in process $proc$/openlane/designs/semi_cpu_top/src/program_counter.v:15$249 in module program_counter.
Removed a total of 5 dead cases.

17. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 93 assignments to connections.

18. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:0$23'.
  Set init value: \clk_div = 11'00000000000
  Set init value: \display_counter = 3'000
Found init rule in `\program_counter.$proc$/openlane/designs/semi_cpu_top/src/program_counter.v:0$258'.
  Set init value: \pc = 0

19. Executing PROC_ARST pass (detect async resets in processes).

20. Executing PROC_ROM pass (convert switches to ROMs).
Converted 2 switches.
<suppressed ~11 debug messages>

21. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\semi_cpu_top.$proc$/openlane/designs/semi_cpu_top/src/semi_cpu_top.v:31$3'.
Creating decoders for process `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
     1/23: $3\aluop[2:0]
     2/23: $2\immediate[31:0]
     3/23: $2\rs[4:0]
     4/23: $2\write_reg[4:0]
     5/23: $2\alu_src[0:0]
     6/23: $2\reg_write[0:0]
     7/23: $2\aluop[2:0]
     8/23: $2\branch_address[31:0]
     9/23: $2\jump_address[31:0]
    10/23: $2\branch[0:0]
    11/23: $2\jump[0:0]
    12/23: $2\rt[4:0]
    13/23: $1\reg_write[0:0]
    14/23: $1\aluop[2:0]
    15/23: $1\branch_address[31:0]
    16/23: $1\jump_address[31:0]
    17/23: $1\branch[0:0]
    18/23: $1\jump[0:0]
    19/23: $1\write_reg[4:0]
    20/23: $1\alu_src[0:0]
    21/23: $1\immediate[31:0]
    22/23: $1\rt[4:0]
    23/23: $1\rs[4:0]
Creating decoders for process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
Creating decoders for process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:18$74'.
     1/3: $1$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$82
     2/3: $1$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_DATA[31:0]$81
     3/3: $1$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_ADDR[4:0]$80
Creating decoders for process `\alu.$proc$/openlane/designs/semi_cpu_top/src/alu.v:29$32'.
     1/1: $display$/openlane/designs/semi_cpu_top/src/alu.v:31$34_EN
Creating decoders for process `\alu.$proc$/openlane/designs/semi_cpu_top/src/alu.v:11$24'.
     1/1: $1\result[31:0]
Creating decoders for process `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:0$23'.
Creating decoders for process `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:90$21'.
Creating decoders for process `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:61$20'.
     1/1: $1\seg[6:0]
Creating decoders for process `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:46$19'.
     1/1: $1\an[7:0]
Creating decoders for process `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:31$18'.
     1/1: $1\current_digit[3:0]
Creating decoders for process `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:21$13'.
Creating decoders for process `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:12$11'.
Creating decoders for process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
Creating decoders for process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:10$182'.
Creating decoders for process `\program_counter.$proc$/openlane/designs/semi_cpu_top/src/program_counter.v:0$258'.
Creating decoders for process `\program_counter.$proc$/openlane/designs/semi_cpu_top/src/program_counter.v:15$249'.
     1/5: $display$/openlane/designs/semi_cpu_top/src/program_counter.v:28$256_EN
     2/5: $display$/openlane/designs/semi_cpu_top/src/program_counter.v:25$253_EN
     3/5: $display$/openlane/designs/semi_cpu_top/src/program_counter.v:22$251_EN
     4/5: $display$/openlane/designs/semi_cpu_top/src/program_counter.v:18$250_EN
     5/5: $0\pc[31:0]

22. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\instruction_decoder.\aluop' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
No latch inferred for signal `\instruction_decoder.\rs' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
No latch inferred for signal `\instruction_decoder.\rt' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
No latch inferred for signal `\instruction_decoder.\rd' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
No latch inferred for signal `\instruction_decoder.\immediate' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
No latch inferred for signal `\instruction_decoder.\reg_write' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
No latch inferred for signal `\instruction_decoder.\alu_src' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
No latch inferred for signal `\instruction_decoder.\write_reg' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
No latch inferred for signal `\instruction_decoder.\jump' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
No latch inferred for signal `\instruction_decoder.\branch' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
No latch inferred for signal `\instruction_decoder.\jump_address' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
No latch inferred for signal `\instruction_decoder.\branch_address' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
No latch inferred for signal `\register_file.\i' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$36_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$37_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$38_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$39_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$40_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$41_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$42_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$43_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$44_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$45_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$46_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$47_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$48_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$49_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$50_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$51_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$52_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$53_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$54_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$55_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$56_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$57_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$58_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$59_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$60_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$61_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$62_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$63_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$64_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$65_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$66_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$67_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
No latch inferred for signal `\alu.\result' from process `\alu.$proc$/openlane/designs/semi_cpu_top/src/alu.v:11$24'.
No latch inferred for signal `\seven_segment_display.\seg' from process `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:61$20'.
No latch inferred for signal `\seven_segment_display.\an' from process `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:46$19'.
No latch inferred for signal `\seven_segment_display.\current_digit' from process `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:31$18'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:19$150_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:22$151_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:25$152_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:28$153_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:31$154_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:34$155_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:37$156_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:40$157_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:41$158_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:42$159_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:43$160_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:44$161_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:47$162_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:50$163_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:53$164_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:56$165_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:59$166_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:62$167_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:65$168_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:68$169_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:71$170_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:74$171_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:77$172_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:78$173_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:79$174_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:80$175_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:81$176_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:82$177_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:83$178_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:84$179_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:85$180_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.$memwr$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:86$181_EN' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
No latch inferred for signal `\instruction_memory.\instruction' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:10$182'.

23. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\semi_cpu_top.\control_prev' using process `\semi_cpu_top.$proc$/openlane/designs/semi_cpu_top/src/semi_cpu_top.v:31$3'.
  created $dff cell `$procdff$481' with positive edge clock.
Creating register for signal `\semi_cpu_top.\reset_prev' using process `\semi_cpu_top.$proc$/openlane/designs/semi_cpu_top/src/semi_cpu_top.v:31$3'.
  created $dff cell `$procdff$482' with positive edge clock.
Creating register for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_ADDR' using process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:18$74'.
  created $dff cell `$procdff$483' with positive edge clock.
Creating register for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_DATA' using process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:18$74'.
  created $dff cell `$procdff$484' with positive edge clock.
Creating register for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN' using process `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:18$74'.
  created $dff cell `$procdff$485' with positive edge clock.
Creating register for signal `\seven_segment_display.\display_counter' using process `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:21$13'.
  created $dff cell `$procdff$486' with positive edge clock.
Creating register for signal `\seven_segment_display.\clk_div' using process `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:12$11'.
  created $dff cell `$procdff$487' with positive edge clock.
Creating register for signal `\program_counter.\pc' using process `\program_counter.$proc$/openlane/designs/semi_cpu_top/src/program_counter.v:15$249'.
  created $dff cell `$procdff$488' with positive edge clock.

24. Executing PROC_MEMWR pass (convert process memory writes to cells).

25. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `semi_cpu_top.$proc$/openlane/designs/semi_cpu_top/src/semi_cpu_top.v:31$3'.
Found and cleaned up 3 empty switches in `\instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
Removing empty process `instruction_decoder.$proc$/openlane/designs/semi_cpu_top/src/instruction_decoder.v:26$148'.
Removing empty process `register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:0$115'.
Found and cleaned up 1 empty switch in `\register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:18$74'.
Removing empty process `register_file.$proc$/openlane/designs/semi_cpu_top/src/register_file.v:18$74'.
Found and cleaned up 1 empty switch in `\alu.$proc$/openlane/designs/semi_cpu_top/src/alu.v:29$32'.
Removing empty process `alu.$proc$/openlane/designs/semi_cpu_top/src/alu.v:29$32'.
Found and cleaned up 1 empty switch in `\alu.$proc$/openlane/designs/semi_cpu_top/src/alu.v:11$24'.
Removing empty process `alu.$proc$/openlane/designs/semi_cpu_top/src/alu.v:11$24'.
Removing empty process `seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:0$23'.
Removing empty process `seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:90$21'.
Found and cleaned up 1 empty switch in `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:61$20'.
Removing empty process `seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:61$20'.
Found and cleaned up 1 empty switch in `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:46$19'.
Removing empty process `seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:46$19'.
Found and cleaned up 1 empty switch in `\seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:31$18'.
Removing empty process `seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:31$18'.
Removing empty process `seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:21$13'.
Removing empty process `seven_segment_display.$proc$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:12$11'.
Removing empty process `instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:0$216'.
Removing empty process `instruction_memory.$proc$/openlane/designs/semi_cpu_top/src/instruction_memory.v:10$182'.
Removing empty process `program_counter.$proc$/openlane/designs/semi_cpu_top/src/program_counter.v:0$258'.
Found and cleaned up 4 empty switches in `\program_counter.$proc$/openlane/designs/semi_cpu_top/src/program_counter.v:15$249'.
Removing empty process `program_counter.$proc$/openlane/designs/semi_cpu_top/src/program_counter.v:15$249'.
Cleaned up 13 empty switches.

26. Executing CHECK pass (checking for obvious problems).
Checking module semi_cpu_top...
Checking module instruction_decoder...
Checking module register_file...
Checking module alu...
Checking module seven_segment_display...
Checking module instruction_memory...
Checking module program_counter...
Found and reported 0 problems.

27. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.
Optimizing module instruction_decoder.
<suppressed ~6 debug messages>
Optimizing module register_file.
<suppressed ~3 debug messages>
Optimizing module alu.
<suppressed ~3 debug messages>
Optimizing module seven_segment_display.
<suppressed ~1 debug messages>
Optimizing module instruction_memory.
Optimizing module program_counter.

28. Executing FLATTEN pass (flatten design).
Deleting now unused module instruction_decoder.
Deleting now unused module register_file.
Deleting now unused module alu.
Deleting now unused module seven_segment_display.
Deleting now unused module instruction_memory.
Deleting now unused module program_counter.
<suppressed ~6 debug messages>

29. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..
Removed 3 unused cells and 262 unused wires.
<suppressed ~4 debug messages>

31. Executing OPT pass (performing simple optimizations).

31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\decoder_inst.$procmux$276.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$279.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$288.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$297.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$307.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$317.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$327.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$336.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$342.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$349.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$355.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$362.
    dead port 1/2 on $mux $flatten\decoder_inst.$procmux$371.
Removed 13 multiplexer ports.
<suppressed ~23 debug messages>

31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu_top.
    New ctrl vector for $pmux cell $flatten\decoder_inst.$procmux$302: { $auto$opt_reduce.cc:134:opt_pmux$491 $flatten\decoder_inst.$procmux$277_CMP }
    New ctrl vector for $pmux cell $flatten\decoder_inst.$procmux$313: $auto$opt_reduce.cc:134:opt_pmux$493
    New ctrl vector for $pmux cell $flatten\decoder_inst.$procmux$322: $auto$opt_reduce.cc:134:opt_pmux$495
    New ctrl vector for $pmux cell $flatten\alu_inst.$procmux$417: { $auto$opt_reduce.cc:134:opt_pmux$501 $flatten\alu_inst.$procmux$421_CMP $flatten\alu_inst.$procmux$420_CMP $auto$opt_reduce.cc:134:opt_pmux$499 $auto$opt_reduce.cc:134:opt_pmux$497 }
    Consolidated identical input bits for $mux cell $flatten\rf_inst.$procmux$407:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77
      New ports: A=1'0, B=1'1, Y=$flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0]
      New connections: $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [31:1] = { $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] $flatten\rf_inst.$0$memwr$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:20$35_EN[31:0]$77 [0] }
  Optimizing cells in module \semi_cpu_top.
Performed a total of 8 changes.

31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

31.6. Executing OPT_DFF pass (perform DFF optimizations).

31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..
Removed 0 unused cells and 30 unused wires.
<suppressed ~1 debug messages>

31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

31.9. Rerunning OPT passes. (Maybe there is more to do..)

31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu_top.
Performed a total of 0 changes.

31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

31.13. Executing OPT_DFF pass (perform DFF optimizations).

31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..

31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

31.16. Finished OPT passes. (There is nothing left to do.)

32. Executing FSM pass (extract and optimize FSM).

32.1. Executing FSM_DETECT pass (finding FSMs in design).

32.2. Executing FSM_EXTRACT pass (extracting FSM from design).

32.3. Executing FSM_OPT pass (simple optimizations of FSMs).

32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..

32.5. Executing FSM_OPT pass (simple optimizations of FSMs).

32.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

32.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

32.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu_top.
Performed a total of 0 changes.

33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

33.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\pc_inst.$procdff$488 ($dff) from module semi_cpu_top (D = $flatten\pc_inst.$procmux$476_Y, Q = \pc_inst.pc, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$502 ($sdff) from module semi_cpu_top (D = $flatten\pc_inst.$procmux$474_Y, Q = \pc_inst.pc).

33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

33.9. Rerunning OPT passes. (Maybe there is more to do..)

33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu_top.
Performed a total of 0 changes.

33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

33.13. Executing OPT_DFF pass (perform DFF optimizations).

33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..

33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

33.16. Finished OPT passes. (There is nothing left to do.)

34. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port semi_cpu_top.$flatten\display_inst.$auto$mem.cc:328:emit$262 ($flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260).
Removed top 29 address bits (of 32) from memory init port semi_cpu_top.$flatten\display_inst.$auto$mem.cc:328:emit$266 ($flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:19$184 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:22$185 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:25$186 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:28$187 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:31$188 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:34$189 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:37$190 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:40$191 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:41$192 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:42$193 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:43$194 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:44$195 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:47$196 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:50$197 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:53$198 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:56$199 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:59$200 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:62$201 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:65$202 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:68$203 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:71$204 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:74$205 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:77$206 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:78$207 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:79$208 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:80$209 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:81$210 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:82$211 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:83$212 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:84$213 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:85$214 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\imem_inst.$meminit$\memory$/openlane/designs/semi_cpu_top/src/instruction_memory.v:86$215 (imem_inst.memory).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$100 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$101 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$102 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$103 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$104 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$105 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$106 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$107 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$108 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$109 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$110 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$111 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$112 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$113 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$114 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$83 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$84 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$85 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$86 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$87 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$88 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$89 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$90 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$91 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$92 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$93 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$94 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$95 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$96 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$97 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$98 (rf_inst.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu_top.$flatten\rf_inst.$meminit$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:28$99 (rf_inst.registers).
Removed top 31 bits (of 32) from port B of cell semi_cpu_top.$flatten\pc_inst.$add$/openlane/designs/semi_cpu_top/src/program_counter.v:27$255 ($add).
Removed top 6 bits (of 32) from mux cell semi_cpu_top.$flatten\decoder_inst.$procmux$346 ($mux).
Removed top 4 bits (of 6) from port B of cell semi_cpu_top.$flatten\decoder_inst.$procmux$347_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell semi_cpu_top.$flatten\decoder_inst.$procmux$331_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell semi_cpu_top.$flatten\decoder_inst.$procmux$305_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell semi_cpu_top.$flatten\decoder_inst.$procmux$304_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell semi_cpu_top.$flatten\decoder_inst.$procmux$272_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell semi_cpu_top.$flatten\alu_inst.$procmux$424_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell semi_cpu_top.$flatten\alu_inst.$procmux$423_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell semi_cpu_top.$flatten\alu_inst.$procmux$422_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell semi_cpu_top.$flatten\display_inst.$procmux$435_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell semi_cpu_top.$flatten\display_inst.$procmux$434_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell semi_cpu_top.$flatten\display_inst.$procmux$433_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell semi_cpu_top.$flatten\display_inst.$add$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:22$14 ($add).
Removed top 29 bits (of 32) from port Y of cell semi_cpu_top.$flatten\display_inst.$add$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:22$14 ($add).
Removed top 31 bits (of 32) from port B of cell semi_cpu_top.$flatten\display_inst.$add$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:13$12 ($add).
Removed top 21 bits (of 32) from port Y of cell semi_cpu_top.$flatten\display_inst.$add$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:13$12 ($add).
Removed top 6 bits (of 32) from wire semi_cpu_top.$flatten\decoder_inst.$2\jump_address[31:0].

35. Executing PEEPOPT pass (run peephole optimizers).

36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

37. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module semi_cpu_top:
  creating $macc model for $flatten\alu_inst.$add$/openlane/designs/semi_cpu_top/src/alu.v:15$25 ($add).
  creating $macc model for $flatten\alu_inst.$sub$/openlane/designs/semi_cpu_top/src/alu.v:16$26 ($sub).
  creating $macc model for $flatten\display_inst.$add$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:13$12 ($add).
  creating $macc model for $flatten\display_inst.$add$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:22$14 ($add).
  creating $macc model for $flatten\pc_inst.$add$/openlane/designs/semi_cpu_top/src/program_counter.v:24$252 ($add).
  creating $macc model for $flatten\pc_inst.$add$/openlane/designs/semi_cpu_top/src/program_counter.v:27$255 ($add).
  creating $alu model for $macc $flatten\pc_inst.$add$/openlane/designs/semi_cpu_top/src/program_counter.v:27$255.
  creating $alu model for $macc $flatten\pc_inst.$add$/openlane/designs/semi_cpu_top/src/program_counter.v:24$252.
  creating $alu model for $macc $flatten\display_inst.$add$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:22$14.
  creating $alu model for $macc $flatten\display_inst.$add$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:13$12.
  creating $alu model for $macc $flatten\alu_inst.$sub$/openlane/designs/semi_cpu_top/src/alu.v:16$26.
  creating $alu model for $macc $flatten\alu_inst.$add$/openlane/designs/semi_cpu_top/src/alu.v:15$25.
  creating $alu cell for $flatten\alu_inst.$add$/openlane/designs/semi_cpu_top/src/alu.v:15$25: $auto$alumacc.cc:485:replace_alu$505
  creating $alu cell for $flatten\alu_inst.$sub$/openlane/designs/semi_cpu_top/src/alu.v:16$26: $auto$alumacc.cc:485:replace_alu$508
  creating $alu cell for $flatten\display_inst.$add$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:13$12: $auto$alumacc.cc:485:replace_alu$511
  creating $alu cell for $flatten\display_inst.$add$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:22$14: $auto$alumacc.cc:485:replace_alu$514
  creating $alu cell for $flatten\pc_inst.$add$/openlane/designs/semi_cpu_top/src/program_counter.v:24$252: $auto$alumacc.cc:485:replace_alu$517
  creating $alu cell for $flatten\pc_inst.$add$/openlane/designs/semi_cpu_top/src/program_counter.v:27$255: $auto$alumacc.cc:485:replace_alu$520
  created 6 $alu and 0 $macc cells.

38. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module semi_cpu_top that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72 ($memrd):
    Found cell that is never activated: $flatten\alu_inst.$display$/openlane/designs/semi_cpu_top/src/alu.v:31$34
    Found cell that is never activated: $flatten\pc_inst.$display$/openlane/designs/semi_cpu_top/src/program_counter.v:28$256
    Found cell that is never activated: $flatten\pc_inst.$procmux$446
    Found cell that is never activated: $flatten\pc_inst.$procmux$443
    Found cell that is never activated: $flatten\pc_inst.$procmux$441
    Found cell that is never activated: $flatten\pc_inst.$procmux$438
    Found cell that is never activated: $flatten\pc_inst.$display$/openlane/designs/semi_cpu_top/src/program_counter.v:25$253
    Found cell that is never activated: $flatten\pc_inst.$procmux$457
    Found cell that is never activated: $flatten\pc_inst.$procmux$454
    Found cell that is never activated: $flatten\pc_inst.$procmux$452
    Found cell that is never activated: $flatten\pc_inst.$procmux$449
    Found 72 activation_patterns using ctrl signal { $flatten\display_inst.$eqx$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:27$16_Y $flatten\display_inst.$procmux$429_CMP $flatten\display_inst.$procmux$430_CMP $flatten\display_inst.$procmux$431_CMP $flatten\display_inst.$procmux$432_CMP $flatten\display_inst.$procmux$436_CMP $flatten\display_inst.$procmux$435_CMP $flatten\display_inst.$procmux$434_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y $auto$opt_reduce.cc:134:opt_pmux$499 $auto$opt_reduce.cc:134:opt_pmux$497 \decoder_inst.jump $flatten\display_inst.$procmux$433_CMP \alu_src }.
    Found 1 candidates: $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69
    Analyzing resource sharing with $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69 ($memrd):
      Found 72 activation_patterns using ctrl signal { $flatten\display_inst.$eqx$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:27$16_Y $flatten\display_inst.$procmux$429_CMP $flatten\display_inst.$procmux$430_CMP $flatten\display_inst.$procmux$431_CMP $flatten\display_inst.$procmux$432_CMP $flatten\display_inst.$procmux$436_CMP $flatten\display_inst.$procmux$435_CMP $flatten\display_inst.$procmux$434_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y $auto$opt_reduce.cc:134:opt_pmux$499 $auto$opt_reduce.cc:134:opt_pmux$497 \decoder_inst.jump $flatten\display_inst.$procmux$433_CMP }.
      Forbidden control signals for this pair of cells: { $flatten\display_inst.$eqx$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:27$16_Y \pc_inst.branch }
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \decoder_inst.jump \alu_src } = 4'1000
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$436_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$435_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$434_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $flatten\display_inst.$procmux$433_CMP \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$432_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$431_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$430_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$429_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \decoder_inst.jump \alu_src } = 4'1000
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$436_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$435_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$434_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $flatten\display_inst.$procmux$433_CMP \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$432_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$431_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$430_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$429_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y \alu_src } = 4'1100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y $auto$opt_reduce.cc:134:opt_pmux$499 \alu_src } = 4'0110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$499 \decoder_inst.jump \alu_src } = 4'0100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$436_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$499 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$435_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$499 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$434_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$499 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$499 $flatten\display_inst.$procmux$433_CMP \alu_src } = 4'0110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$432_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$499 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$431_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$499 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$430_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$499 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$429_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$499 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y $auto$opt_reduce.cc:134:opt_pmux$497 \alu_src } = 4'0110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$497 \decoder_inst.jump \alu_src } = 4'0100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$436_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$497 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$435_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$497 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$434_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$497 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$497 $flatten\display_inst.$procmux$433_CMP \alu_src } = 4'0110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$432_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$497 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$431_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$497 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$430_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$497 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:15$72: { $flatten\display_inst.$procmux$429_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $auto$opt_reduce.cc:134:opt_pmux$497 \alu_src } = 4'1010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$497 \decoder_inst.jump } = 3'010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y $auto$opt_reduce.cc:134:opt_pmux$497 } = 3'011
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$429_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$497 } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$430_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$497 } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$431_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$497 } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$432_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$497 } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$497 $flatten\display_inst.$procmux$433_CMP } = 3'011
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$434_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$497 } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$435_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$497 } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$436_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$497 } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y \decoder_inst.jump } = 3'100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$429_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$430_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$431_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$432_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $flatten\display_inst.$procmux$433_CMP } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$434_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$435_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$436_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y \decoder_inst.jump } = 3'100
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$429_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$430_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$431_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$432_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $flatten\display_inst.$procmux$433_CMP } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$434_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$435_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$436_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y } = 3'110
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$499 \decoder_inst.jump } = 3'010
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y $auto$opt_reduce.cc:134:opt_pmux$499 } = 3'011
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$429_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$499 } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$430_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$499 } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$431_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$499 } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$432_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$499 } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$499 $flatten\display_inst.$procmux$433_CMP } = 3'011
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$434_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$499 } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$435_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$499 } = 3'101
      Activation pattern for cell $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69: { $flatten\display_inst.$procmux$436_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $auto$opt_reduce.cc:134:opt_pmux$499 } = 3'101
      Size of SAT problem: 0 cells, 636 variables, 2079 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\display_inst.$procmux$429_CMP $flatten\display_inst.$procmux$430_CMP $flatten\display_inst.$procmux$431_CMP $flatten\display_inst.$procmux$432_CMP $flatten\display_inst.$procmux$436_CMP $flatten\display_inst.$procmux$435_CMP $flatten\display_inst.$procmux$434_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:15$71_Y $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y $auto$opt_reduce.cc:134:opt_pmux$499 $auto$opt_reduce.cc:134:opt_pmux$497 \decoder_inst.jump $flatten\display_inst.$procmux$433_CMP \alu_src } = 17'00001000000001000
  Analyzing resource sharing options for $flatten\rf_inst.$memrd$\registers$/openlane/designs/semi_cpu_top/src/register_file.v:14$69 ($memrd):
    Found 72 activation_patterns using ctrl signal { $flatten\display_inst.$eqx$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:27$16_Y $flatten\display_inst.$procmux$429_CMP $flatten\display_inst.$procmux$430_CMP $flatten\display_inst.$procmux$431_CMP $flatten\display_inst.$procmux$432_CMP $flatten\display_inst.$procmux$436_CMP $flatten\display_inst.$procmux$435_CMP $flatten\display_inst.$procmux$434_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$eq$/openlane/designs/semi_cpu_top/src/register_file.v:14$68_Y $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y $auto$opt_reduce.cc:134:opt_pmux$499 $auto$opt_reduce.cc:134:opt_pmux$497 \decoder_inst.jump $flatten\display_inst.$procmux$433_CMP }.
    No candidates found.
  Analyzing resource sharing options for $flatten\alu_inst.$shr$/openlane/designs/semi_cpu_top/src/alu.v:18$28 ($shr):
    Found 18 activation_patterns using ctrl signal { $flatten\display_inst.$eqx$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:27$16_Y $flatten\display_inst.$procmux$429_CMP $flatten\display_inst.$procmux$430_CMP $flatten\display_inst.$procmux$431_CMP $flatten\display_inst.$procmux$432_CMP $flatten\display_inst.$procmux$436_CMP $flatten\display_inst.$procmux$435_CMP $flatten\display_inst.$procmux$434_CMP $flatten\alu_inst.$procmux$420_CMP $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y \decoder_inst.jump $flatten\display_inst.$procmux$433_CMP }.
    No candidates found.
  Analyzing resource sharing options for $flatten\alu_inst.$shl$/openlane/designs/semi_cpu_top/src/alu.v:17$27 ($shl):
    Found 18 activation_patterns using ctrl signal { $flatten\display_inst.$eqx$/openlane/designs/semi_cpu_top/src/seven_segment_display.v:27$16_Y $flatten\display_inst.$procmux$429_CMP $flatten\display_inst.$procmux$430_CMP $flatten\display_inst.$procmux$431_CMP $flatten\display_inst.$procmux$432_CMP $flatten\display_inst.$procmux$436_CMP $flatten\display_inst.$procmux$435_CMP $flatten\display_inst.$procmux$434_CMP $flatten\alu_inst.$procmux$421_CMP $flatten\rf_inst.$logic_and$/openlane/designs/semi_cpu_top/src/register_file.v:19$79_Y \decoder_inst.jump $flatten\display_inst.$procmux$433_CMP }.
    No candidates found.
Removing 11 cells in module semi_cpu_top:
  Removing cell $flatten\pc_inst.$procmux$449 ($mux).
  Removing cell $flatten\pc_inst.$procmux$452 ($mux).
  Removing cell $flatten\pc_inst.$procmux$454 ($mux).
  Removing cell $flatten\pc_inst.$procmux$457 ($mux).
  Removing cell $flatten\pc_inst.$display$/openlane/designs/semi_cpu_top/src/program_counter.v:25$253 ($print).
  Removing cell $flatten\pc_inst.$procmux$438 ($mux).
  Removing cell $flatten\pc_inst.$procmux$441 ($mux).
  Removing cell $flatten\pc_inst.$procmux$443 ($mux).
  Removing cell $flatten\pc_inst.$procmux$446 ($mux).
  Removing cell $flatten\pc_inst.$display$/openlane/designs/semi_cpu_top/src/program_counter.v:28$256 ($print).
  Removing cell $flatten\alu_inst.$display$/openlane/designs/semi_cpu_top/src/alu.v:31$34 ($print).

39. Executing OPT pass (performing simple optimizations).

39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\alu_inst.$procmux$415.
    dead port 2/2 on $mux $flatten\alu_inst.$procmux$415.
Removed 2 multiplexer ports.
<suppressed ~18 debug messages>

39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu_top.
Performed a total of 0 changes.

39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

39.6. Executing OPT_DFF pass (perform DFF optimizations).

39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..
Removed 1 unused cells and 10 unused wires.
<suppressed ~2 debug messages>

39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

39.9. Rerunning OPT passes. (Maybe there is more to do..)

39.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

39.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu_top.
Performed a total of 0 changes.

39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

39.13. Executing OPT_DFF pass (perform DFF optimizations).

39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..

39.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

39.16. Finished OPT passes. (There is nothing left to do.)

40. Executing MEMORY pass.

40.1. Executing OPT_MEM pass (optimize memories).
semi_cpu_top.imem_inst.memory: removing const-0 lane 4
semi_cpu_top.imem_inst.memory: removing const-0 lane 6
semi_cpu_top.imem_inst.memory: removing const-0 lane 7
semi_cpu_top.imem_inst.memory: removing const-0 lane 8
semi_cpu_top.imem_inst.memory: removing const-0 lane 9
semi_cpu_top.imem_inst.memory: removing const-0 lane 10
semi_cpu_top.imem_inst.memory: removing const-0 lane 30
semi_cpu_top.imem_inst.memory: removing const-0 lane 31
Performed a total of 1 transformations.

40.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

40.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing semi_cpu_top.rf_inst.registers write port 0.

40.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

40.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260'[0] in module `\semi_cpu_top': no output FF found.
Checking read port `$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264'[0] in module `\semi_cpu_top': no output FF found.
Checking read port `\imem_inst.memory'[0] in module `\semi_cpu_top': no output FF found.
Checking read port `\rf_inst.registers'[0] in module `\semi_cpu_top': no output FF found.
Checking read port `\rf_inst.registers'[1] in module `\semi_cpu_top': no output FF found.
Checking read port address `$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260'[0] in module `\semi_cpu_top': no address FF found.
Checking read port address `$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264'[0] in module `\semi_cpu_top': address FF has fully-defined init value, not supported.
Checking read port address `\imem_inst.memory'[0] in module `\semi_cpu_top': address FF has fully-defined init value, not supported.
Checking read port address `\rf_inst.registers'[0] in module `\semi_cpu_top': no address FF found.
Checking read port address `\rf_inst.registers'[1] in module `\semi_cpu_top': no address FF found.

40.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..

40.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory semi_cpu_top.rf_inst.registers by address:

40.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

40.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..

40.10. Executing MEMORY_COLLECT pass (generating $mem cells).

41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..

42. Executing OPT pass (performing simple optimizations).

42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.
<suppressed ~15 debug messages>

42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

42.3. Executing OPT_DFF pass (perform DFF optimizations).

42.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..
Removed 4 unused cells and 13 unused wires.
<suppressed ~5 debug messages>

42.5. Finished fast OPT passes.

43. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260 in module \semi_cpu_top:
  created 16 $dff cells and 0 static cells of width 7.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264 in module \semi_cpu_top:
  created 8 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \imem_inst.memory in module \semi_cpu_top:
  created 32 $dff cells and 0 static cells of width 24.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \rf_inst.registers in module \semi_cpu_top:
  created 32 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 62 $mux cells.
  write interface: 32 write mux blocks.

44. Executing OPT pass (performing simple optimizations).

44.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.
<suppressed ~21 debug messages>

44.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

44.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

44.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu_top.
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][4][10]$674:
      Old ports: A=24'100000101001010000000001, B=24'001000000000000000001110, Y=$memory\imem_inst.memory$rdmux[0][3][5]$a$636
      New ports: A=2'01, B=2'10, Y=$memory\imem_inst.memory$rdmux[0][3][5]$a$636 [1:0]
      New connections: $memory\imem_inst.memory$rdmux[0][3][5]$a$636 [23:2] = { $memory\imem_inst.memory$rdmux[0][3][5]$a$636 [0] 1'0 $memory\imem_inst.memory$rdmux[0][3][5]$a$636 [1] 3'000 $memory\imem_inst.memory$rdmux[0][3][5]$a$636 [0] 1'0 $memory\imem_inst.memory$rdmux[0][3][5]$a$636 [0] 2'00 $memory\imem_inst.memory$rdmux[0][3][5]$a$636 [0] 1'0 $memory\imem_inst.memory$rdmux[0][3][5]$a$636 [0] 6'000000 $memory\imem_inst.memory$rdmux[0][3][5]$a$636 [1] $memory\imem_inst.memory$rdmux[0][3][5]$a$636 [1] }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][4][9]$671:
      Old ports: A=24'000000111000000011010000, B=24'000001000000000011110000, Y=$memory\imem_inst.memory$rdmux[0][3][4]$b$634
      New ports: A=2'10, B=2'01, Y={ $memory\imem_inst.memory$rdmux[0][3][4]$b$634 [15] $memory\imem_inst.memory$rdmux[0][3][4]$b$634 [5] }
      New connections: { $memory\imem_inst.memory$rdmux[0][3][4]$b$634 [23:16] $memory\imem_inst.memory$rdmux[0][3][4]$b$634 [14:6] $memory\imem_inst.memory$rdmux[0][3][4]$b$634 [4:0] } = { 5'00000 $memory\imem_inst.memory$rdmux[0][3][4]$b$634 [5] $memory\imem_inst.memory$rdmux[0][3][4]$b$634 [15] $memory\imem_inst.memory$rdmux[0][3][4]$b$634 [15] 14'00000001110000 }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][4][8]$668:
      Old ports: A=24'100000000001110000000001, B=24'000000110001110100010000, Y=$memory\imem_inst.memory$rdmux[0][3][4]$a$633
      New ports: A=2'01, B=2'10, Y={ $memory\imem_inst.memory$rdmux[0][3][4]$a$633 [4] $memory\imem_inst.memory$rdmux[0][3][4]$a$633 [0] }
      New connections: { $memory\imem_inst.memory$rdmux[0][3][4]$a$633 [23:5] $memory\imem_inst.memory$rdmux[0][3][4]$a$633 [3:1] } = { $memory\imem_inst.memory$rdmux[0][3][4]$a$633 [0] 5'00000 $memory\imem_inst.memory$rdmux[0][3][4]$a$633 [4] $memory\imem_inst.memory$rdmux[0][3][4]$a$633 [4] 7'0001110 $memory\imem_inst.memory$rdmux[0][3][4]$a$633 [4] 6'000000 }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][4][7]$665:
      Old ports: A=24'010000100001010000000111, B=24'100000000001100000000001, Y=$memory\imem_inst.memory$rdmux[0][3][3]$b$631
      New ports: A=2'01, B=2'10, Y={ $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [11] $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [1] }
      New connections: { $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [23:12] $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [10:2] $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [0] } = { $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [11] $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [1] 4'0000 $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [1] 5'00001 $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [1] 7'0000000 $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [1] 1'1 }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][4][6]$662:
      Old ports: A=24'100000000001000000000100, B=24'000000000000000010110000, Y=$memory\imem_inst.memory$rdmux[0][3][3]$a$630
      New ports: A=2'01, B=2'10, Y={ $memory\imem_inst.memory$rdmux[0][3][3]$a$630 [4] $memory\imem_inst.memory$rdmux[0][3][3]$a$630 [2] }
      New connections: { $memory\imem_inst.memory$rdmux[0][3][3]$a$630 [23:5] $memory\imem_inst.memory$rdmux[0][3][3]$a$630 [3] $memory\imem_inst.memory$rdmux[0][3][3]$a$630 [1:0] } = { $memory\imem_inst.memory$rdmux[0][3][3]$a$630 [2] 10'0000000000 $memory\imem_inst.memory$rdmux[0][3][3]$a$630 [2] 4'0000 $memory\imem_inst.memory$rdmux[0][3][3]$a$630 [4] 1'0 $memory\imem_inst.memory$rdmux[0][3][3]$a$630 [4] 3'000 }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][4][3]$653:
      Old ports: A=24'000010101001111111000000, B=24'000000000000000000000000, Y=$memory\imem_inst.memory$rdmux[0][3][1]$b$625
      New ports: A=1'1, B=1'0, Y=$memory\imem_inst.memory$rdmux[0][3][1]$b$625 [6]
      New connections: { $memory\imem_inst.memory$rdmux[0][3][1]$b$625 [23:7] $memory\imem_inst.memory$rdmux[0][3][1]$b$625 [5:0] } = { 4'0000 $memory\imem_inst.memory$rdmux[0][3][1]$b$625 [6] 1'0 $memory\imem_inst.memory$rdmux[0][3][1]$b$625 [6] 1'0 $memory\imem_inst.memory$rdmux[0][3][1]$b$625 [6] 2'00 $memory\imem_inst.memory$rdmux[0][3][1]$b$625 [6] $memory\imem_inst.memory$rdmux[0][3][1]$b$625 [6] $memory\imem_inst.memory$rdmux[0][3][1]$b$625 [6] $memory\imem_inst.memory$rdmux[0][3][1]$b$625 [6] $memory\imem_inst.memory$rdmux[0][3][1]$b$625 [6] $memory\imem_inst.memory$rdmux[0][3][1]$b$625 [6] 6'000000 }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][4][2]$650:
      Old ports: A=24'100000000101010000000010, B=24'001000000000000000001100, Y=$memory\imem_inst.memory$rdmux[0][3][1]$a$624
      New ports: A=2'01, B=2'10, Y=$memory\imem_inst.memory$rdmux[0][3][1]$a$624 [2:1]
      New connections: { $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [23:3] $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [0] } = { $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [1] 1'0 $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [2] 6'000000 $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [1] 1'0 $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [1] 1'0 $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [1] 6'000000 $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [2] 1'0 }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][4][1]$647:
      Old ports: A=24'000001010011111100110000, B=24'100111001101000000000101, Y=$memory\imem_inst.memory$rdmux[0][3][0]$b$622
      New ports: A=2'10, B=2'01, Y={ $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [4] $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [0] }
      New connections: { $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [23:5] $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [3:1] } = { $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [0] 2'00 $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [0] $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [0] 2'10 $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [4] $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [0] $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [0] $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [4] 1'1 $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [4] $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [4] $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [4] $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [4] 2'00 $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [4] 1'0 $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][4][0]$644:
      Old ports: A=24'100000000010100000001010, B=24'100000000011110000001111, Y=$memory\imem_inst.memory$rdmux[0][3][0]$a$621
      New ports: A=1'0, B=1'1, Y=$memory\imem_inst.memory$rdmux[0][3][0]$a$621 [0]
      New connections: $memory\imem_inst.memory$rdmux[0][3][0]$a$621 [23:1] = { 11'10000000001 $memory\imem_inst.memory$rdmux[0][3][0]$a$621 [0] 1'1 $memory\imem_inst.memory$rdmux[0][3][0]$a$621 [0] 7'0000001 $memory\imem_inst.memory$rdmux[0][3][0]$a$621 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][2][2]$593:
      Old ports: A=8'11101111, B=8'11011111, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][1]$a$585
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][1]$a$585 [5:4]
      New connections: { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][1]$a$585 [7:6] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][1]$a$585 [3:0] } = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][2][1]$590:
      Old ports: A=8'11111011, B=8'11110111, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][0]$b$583
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][0]$b$583 [3:2]
      New connections: { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][0]$b$583 [7:4] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][0]$b$583 [1:0] } = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][2][0]$587:
      Old ports: A=8'11111110, B=8'11111101, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][0]$a$582
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][0]$a$582 [1:0]
      New connections: $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][0]$a$582 [7:2] = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][3][6]$572:
      Old ports: A=7'1000110, B=7'0100001, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$a$552
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$a$552 [1:0]
      New connections: $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$a$552 [6:2] = { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$a$552 [1:0] 2'00 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$a$552 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][3][5]$569:
      Old ports: A=7'0001000, B=7'0000011, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$b$550
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$b$550 [3] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$b$550 [0] }
      New connections: { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$b$550 [6:4] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$b$550 [2:1] } = { 4'0000 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$b$550 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][3][4]$566:
      Old ports: A=7'0000000, B=7'0010000, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$a$549
      New ports: A=1'0, B=1'1, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$a$549 [4]
      New connections: { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$a$549 [6:5] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$a$549 [3:0] } = 6'000000
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][3][3]$563:
      Old ports: A=7'0000010, B=7'1111000, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547 [3] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547 [1] }
      New connections: { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547 [6:4] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547 [2] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547 [0] } = { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547 [3] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547 [3] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547 [3] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][3][2]$560:
      Old ports: A=7'0011001, B=7'0010010, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$a$546
      New ports: A=2'01, B=2'10, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$a$546 [1:0]
      New connections: $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$a$546 [6:2] = { 3'001 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$a$546 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][3][1]$557:
      Old ports: A=7'0100100, B=7'0110000, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$b$544
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$b$544 [4] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$b$544 [2] }
      New connections: { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$b$544 [6:5] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$b$544 [3] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$b$544 [1:0] } = 5'01000
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][3][0]$554:
      Old ports: A=7'1000000, B=7'1111001, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$a$543
      New ports: A=1'0, B=1'1, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$a$543 [0]
      New connections: $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$a$543 [6:1] = { 1'1 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$a$543 [0] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$a$543 [0] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$a$543 [0] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\decoder_inst.$procmux$339:
      Old ports: A=0, B={ \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15] \decoder_inst.instruction [15:11] 5'00000 \decoder_inst.instruction [5] 1'0 \decoder_inst.instruction [3:0] }, Y=$flatten\decoder_inst.$2\branch_address[31:0]
      New ports: A=10'0000000000, B={ \decoder_inst.instruction [15:11] \decoder_inst.instruction [5] \decoder_inst.instruction [3:0] }, Y={ $flatten\decoder_inst.$2\branch_address[31:0] [15:11] $flatten\decoder_inst.$2\branch_address[31:0] [5] $flatten\decoder_inst.$2\branch_address[31:0] [3:0] }
      New connections: { $flatten\decoder_inst.$2\branch_address[31:0] [31:16] $flatten\decoder_inst.$2\branch_address[31:0] [10:6] $flatten\decoder_inst.$2\branch_address[31:0] [4] } = { $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] $flatten\decoder_inst.$2\branch_address[31:0] [15] 6'000000 }
    Consolidated identical input bits for $mux cell $flatten\decoder_inst.$procmux$346:
      Old ports: A=26'00000000000000000000000000, B={ \decoder_inst.instruction [25:11] 5'00000 \decoder_inst.instruction [5] 1'0 \decoder_inst.instruction [3:0] }, Y=$auto$wreduce.cc:461:run$504 [25:0]
      New ports: A=20'00000000000000000000, B={ \decoder_inst.instruction [25:11] \decoder_inst.instruction [5] \decoder_inst.instruction [3:0] }, Y={ $auto$wreduce.cc:461:run$504 [25:11] $auto$wreduce.cc:461:run$504 [5] $auto$wreduce.cc:461:run$504 [3:0] }
      New connections: { $auto$wreduce.cc:461:run$504 [10:6] $auto$wreduce.cc:461:run$504 [4] } = 6'000000
    Consolidated identical input bits for $mux cell $flatten\decoder_inst.$procmux$383:
      Old ports: A={ 6'000000 $auto$wreduce.cc:461:run$504 [25:0] }, B=0, Y=\pc_inst.jump_address
      New ports: A=$auto$wreduce.cc:461:run$504 [25:0], B=26'00000000000000000000000000, Y=\pc_inst.jump_address [25:0]
      New connections: \pc_inst.jump_address [31:26] = 6'000000
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][3][7]$575:
      Old ports: A=7'0000110, B=7'0001110, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$b$553
      New ports: A=1'0, B=1'1, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$b$553 [3]
      New connections: { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$b$553 [6:4] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$b$553 [2:0] } = 6'000110
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][2][3]$596:
      Old ports: A=8'10111111, B=8'01111111, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][1]$b$586
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][1]$b$586 [7:6]
      New connections: $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][1]$b$586 [5:0] = 6'111111
  Optimizing cells in module \semi_cpu_top.
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][3][5]$635:
      Old ports: A=$memory\imem_inst.memory$rdmux[0][3][5]$a$636, B=24'000000000000000000000000, Y=$memory\imem_inst.memory$rdmux[0][2][2]$b$616
      New ports: A=$memory\imem_inst.memory$rdmux[0][3][5]$a$636 [1:0], B=2'00, Y=$memory\imem_inst.memory$rdmux[0][2][2]$b$616 [1:0]
      New connections: $memory\imem_inst.memory$rdmux[0][2][2]$b$616 [23:2] = { $memory\imem_inst.memory$rdmux[0][2][2]$b$616 [0] 1'0 $memory\imem_inst.memory$rdmux[0][2][2]$b$616 [1] 3'000 $memory\imem_inst.memory$rdmux[0][2][2]$b$616 [0] 1'0 $memory\imem_inst.memory$rdmux[0][2][2]$b$616 [0] 2'00 $memory\imem_inst.memory$rdmux[0][2][2]$b$616 [0] 1'0 $memory\imem_inst.memory$rdmux[0][2][2]$b$616 [0] 6'000000 $memory\imem_inst.memory$rdmux[0][2][2]$b$616 [1] $memory\imem_inst.memory$rdmux[0][2][2]$b$616 [1] }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][3][4]$632:
      Old ports: A=$memory\imem_inst.memory$rdmux[0][3][4]$a$633, B=$memory\imem_inst.memory$rdmux[0][3][4]$b$634, Y=$memory\imem_inst.memory$rdmux[0][2][2]$a$615
      New ports: A={ $memory\imem_inst.memory$rdmux[0][3][4]$a$633 [4] 2'01 $memory\imem_inst.memory$rdmux[0][3][4]$a$633 [4] 2'00 $memory\imem_inst.memory$rdmux[0][3][4]$a$633 [4] $memory\imem_inst.memory$rdmux[0][3][4]$a$633 [0] }, B={ $memory\imem_inst.memory$rdmux[0][3][4]$b$634 [15] $memory\imem_inst.memory$rdmux[0][3][4]$b$634 [15] 3'001 $memory\imem_inst.memory$rdmux[0][3][4]$b$634 [5] 2'10 }, Y={ $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [16:15] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [10] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [8] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [6:4] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [0] }
      New connections: { $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [23:17] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [14:11] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [9] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [7] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [3:1] } = { $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [0] 4'0000 $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [5] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [16] 2'00 $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [10] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [10] 1'0 $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [6] 3'000 }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][3][3]$629:
      Old ports: A=$memory\imem_inst.memory$rdmux[0][3][3]$a$630, B=$memory\imem_inst.memory$rdmux[0][3][3]$b$631, Y=$memory\imem_inst.memory$rdmux[0][2][1]$b$613
      New ports: A={ $memory\imem_inst.memory$rdmux[0][3][3]$a$630 [2] $memory\imem_inst.memory$rdmux[0][3][3]$a$630 [2] 1'0 $memory\imem_inst.memory$rdmux[0][3][3]$a$630 [4] $memory\imem_inst.memory$rdmux[0][3][3]$a$630 [2] 2'00 }, B={ $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [11] 1'1 $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [11] 1'0 $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [1] $memory\imem_inst.memory$rdmux[0][3][3]$b$631 [1] 1'1 }, Y={ $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [23] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [12:11] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [4] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [2:0] }
      New connections: { $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [22:13] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [10:5] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [3] } = { $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [1] 4'0000 $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [1] 4'0000 $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [1] 2'00 $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [4] 1'0 $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [4] 1'0 }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][3][1]$623:
      Old ports: A=$memory\imem_inst.memory$rdmux[0][3][1]$a$624, B=$memory\imem_inst.memory$rdmux[0][3][1]$b$625, Y=$memory\imem_inst.memory$rdmux[0][2][0]$b$610
      New ports: A={ $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [1] 1'0 $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [2:1] }, B={ $memory\imem_inst.memory$rdmux[0][3][1]$b$625 [6] $memory\imem_inst.memory$rdmux[0][3][1]$b$625 [6] 2'00 }, Y={ $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [10] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [6] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [2:1] }
      New connections: { $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [23:11] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [9:7] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [5:3] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [0] } = { $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [1] 1'0 $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [2] 1'0 $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [6] 1'0 $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [6] 1'0 $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [6] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [1] 1'0 $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [10] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [6] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [6] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [6] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [6] 2'00 $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [2] 1'0 }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][3][0]$620:
      Old ports: A=$memory\imem_inst.memory$rdmux[0][3][0]$a$621, B=$memory\imem_inst.memory$rdmux[0][3][0]$b$622, Y=$memory\imem_inst.memory$rdmux[0][2][0]$a$609
      New ports: A={ 3'100 $memory\imem_inst.memory$rdmux[0][3][0]$a$621 [0] 1'1 $memory\imem_inst.memory$rdmux[0][3][0]$a$621 [0] 2'01 $memory\imem_inst.memory$rdmux[0][3][0]$a$621 [0] }, B={ $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [0] 1'1 $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [0] 1'1 $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [4] $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [4] $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [4] 1'0 $memory\imem_inst.memory$rdmux[0][3][0]$b$622 [0] }, Y={ $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [23] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [18] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [14] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [12:10] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [4] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [1:0] }
      New connections: { $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [22:19] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [17:15] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [13] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [9:5] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [3:2] } = { 2'00 $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [14] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [14] 1'0 $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [4] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [14] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [11] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [4] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [4] 2'00 $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [4] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [1:0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][1]$584:
      Old ports: A=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][1]$a$585, B=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][1]$b$586, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][0][0]$b$580
      New ports: A={ 2'11 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][1]$a$585 [5:4] }, B={ $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][1]$b$586 [7:6] 2'11 }, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][0][0]$b$580 [7:4]
      New connections: $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][0][0]$b$580 [3:0] = 4'1111
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][0]$581:
      Old ports: A=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][0]$a$582, B=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][0]$b$583, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][0][0]$a$579
      New ports: A={ 2'11 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][0]$a$582 [1:0] }, B={ $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][1][0]$b$583 [3:2] 2'11 }, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][0][0]$a$579 [3:0]
      New connections: $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$264$rdmux[0][0][0]$a$579 [7:4] = 4'1111
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$551:
      Old ports: A=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$a$552, B=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$b$553, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$b$541
      New ports: A={ $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$a$552 [1] 1'0 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$a$552 [1:0] }, B={ 1'0 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][3]$b$553 [3] 2'10 }, Y={ $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$b$541 [6] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$b$541 [3] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$b$541 [1:0] }
      New connections: { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$b$541 [5:4] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$b$541 [2] } = { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$b$541 [0] 1'0 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$b$541 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$548:
      Old ports: A=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$a$549, B=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$b$550, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$a$540
      New ports: A={ $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$a$549 [4] 2'00 }, B={ 1'0 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$b$550 [3] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][2]$b$550 [0] }, Y={ $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$a$540 [4:3] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$a$540 [0] }
      New connections: { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$a$540 [6:5] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$a$540 [2:1] } = { 3'000 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][1]$a$540 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$545:
      Old ports: A=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$a$546, B=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][0]$b$538
      New ports: A={ 2'01 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$a$546 [0] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$a$546 [1:0] }, B={ $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547 [3] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547 [3] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547 [3] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][1]$b$547 [1] 1'0 }, Y={ $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][0]$b$538 [5:3] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][0]$b$538 [1:0] }
      New connections: { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][0]$b$538 [6] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][0]$b$538 [2] } = { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][0]$b$538 [5] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$542:
      Old ports: A=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$a$543, B=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$b$544, Y=$memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][0]$a$537
      New ports: A={ 1'1 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$a$543 [0] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$a$543 [0] 1'0 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$a$543 [0] }, B={ 2'01 $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$b$544 [4] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][2][0]$b$544 [2] 1'0 }, Y={ $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][0]$a$537 [6:4] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][0]$a$537 [2] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][0]$a$537 [0] }
      New connections: { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][0]$a$537 [3] $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][0]$a$537 [1] } = { $memory$flatten\display_inst.$auto$proc_rom.cc:150:do_switch$260$rdmux[0][1][0]$a$537 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\decoder_inst.$procmux$380:
      Old ports: A=$flatten\decoder_inst.$2\branch_address[31:0], B=0, Y=\pc_inst.branch_address
      New ports: A={ $flatten\decoder_inst.$2\branch_address[31:0] [15:11] $flatten\decoder_inst.$2\branch_address[31:0] [5] $flatten\decoder_inst.$2\branch_address[31:0] [3:0] }, B=10'0000000000, Y={ \pc_inst.branch_address [15:11] \pc_inst.branch_address [5] \pc_inst.branch_address [3:0] }
      New connections: { \pc_inst.branch_address [31:16] \pc_inst.branch_address [10:6] \pc_inst.branch_address [4] } = { \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] 6'000000 }
    Consolidated identical input bits for $mux cell $flatten\decoder_inst.$procmux$383:
      Old ports: A=$auto$wreduce.cc:461:run$504 [25:0], B=26'00000000000000000000000000, Y=\pc_inst.jump_address [25:0]
      New ports: A={ $auto$wreduce.cc:461:run$504 [25:11] $auto$wreduce.cc:461:run$504 [5] $auto$wreduce.cc:461:run$504 [3:0] }, B=20'00000000000000000000, Y={ \pc_inst.jump_address [25:11] \pc_inst.jump_address [5] \pc_inst.jump_address [3:0] }
      New connections: { \pc_inst.jump_address [10:6] \pc_inst.jump_address [4] } = 6'000000
  Optimizing cells in module \semi_cpu_top.
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][2][2]$614:
      Old ports: A=$memory\imem_inst.memory$rdmux[0][2][2]$a$615, B=$memory\imem_inst.memory$rdmux[0][2][2]$b$616, Y=$memory\imem_inst.memory$rdmux[0][1][1]$a$606
      New ports: A={ $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [16] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [16:15] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [10] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [10] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [8] $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [6:4] 1'0 $memory\imem_inst.memory$rdmux[0][2][2]$a$615 [0] }, B={ $memory\imem_inst.memory$rdmux[0][2][2]$b$616 [0] 1'0 $memory\imem_inst.memory$rdmux[0][2][2]$b$616 [0] 1'0 $memory\imem_inst.memory$rdmux[0][2][2]$b$616 [0] 4'0000 $memory\imem_inst.memory$rdmux[0][2][2]$b$616 [1:0] }, Y={ $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [17:15] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [11:10] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [8] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [6:4] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [1:0] }
      New connections: { $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [23:18] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [14:12] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [9] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [7] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [3:2] } = { $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [0] 1'0 $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [1] 2'00 $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [5] 2'00 $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [10] 1'0 $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [6] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [1] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [1] }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][2][1]$611:
      Old ports: A=24'000000000000000000000000, B=$memory\imem_inst.memory$rdmux[0][2][1]$b$613, Y=$memory\imem_inst.memory$rdmux[0][1][0]$b$604
      New ports: A=7'0000000, B={ $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [23] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [12:11] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [4] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [2:0] }, Y={ $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [23] $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [12:11] $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [4] $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [2:0] }
      New connections: { $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [22:13] $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [10:5] $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [3] } = { $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [1] 4'0000 $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [1] 4'0000 $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [1] 2'00 $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [4] 1'0 $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [4] 1'0 }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][2][0]$608:
      Old ports: A=$memory\imem_inst.memory$rdmux[0][2][0]$a$609, B=$memory\imem_inst.memory$rdmux[0][2][0]$b$610, Y=$memory\imem_inst.memory$rdmux[0][1][0]$a$603
      New ports: A={ $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [23] 1'0 $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [14] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [18] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [14] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [14] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [11] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [12:10] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [4] 1'0 $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [4] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [1:0] $memory\imem_inst.memory$rdmux[0][2][0]$a$609 [1:0] }, B={ $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [1] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [2] 2'00 $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [6] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [1] 1'0 $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [10] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [6] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [10] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [6] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [6] 1'0 $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [2] $memory\imem_inst.memory$rdmux[0][2][0]$b$610 [2:1] 1'0 }, Y={ $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [23] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [21:20] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [18] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [15:10] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [8] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [6] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [4:0] }
      New connections: { $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [22] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [19] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [17:16] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [9] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [7] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [5] } = { 1'0 $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [15] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [6] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [4] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [8] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [6] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [4] }
  Optimizing cells in module \semi_cpu_top.
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][1][1]$605:
      Old ports: A=$memory\imem_inst.memory$rdmux[0][1][1]$a$606, B=24'000000000000000000000000, Y=$memory\imem_inst.memory$rdmux[0][0][0]$b$601
      New ports: A={ $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [17:15] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [11:10] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [8] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [6:4] $memory\imem_inst.memory$rdmux[0][1][1]$a$606 [1:0] }, B=11'00000000000, Y={ $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [17:15] $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [11:10] $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [8] $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [6:4] $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [1:0] }
      New connections: { $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [23:18] $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [14:12] $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [9] $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [7] $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [3:2] } = { $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [0] 1'0 $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [1] 2'00 $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [5] 2'00 $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [10] 1'0 $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [6] $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [1] $memory\imem_inst.memory$rdmux[0][0][0]$b$601 [1] }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][1][0]$602:
      Old ports: A=$memory\imem_inst.memory$rdmux[0][1][0]$a$603, B=$memory\imem_inst.memory$rdmux[0][1][0]$b$604, Y=$memory\imem_inst.memory$rdmux[0][0][0]$a$600
      New ports: A={ $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [23] 1'0 $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [21:20] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [18] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [6] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [4] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [15:10] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [8] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [6] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [6] $memory\imem_inst.memory$rdmux[0][1][0]$a$603 [4:0] }, B={ $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [23] $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [1] 3'000 $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [1] 4'0000 $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [12:11] $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [1] 1'0 $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [4] 1'0 $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [4] 1'0 $memory\imem_inst.memory$rdmux[0][1][0]$b$604 [2:0] }, Y={ $memory\imem_inst.memory$rdmux[0][0][0]$a$600 [23:20] $memory\imem_inst.memory$rdmux[0][0][0]$a$600 [18:10] $memory\imem_inst.memory$rdmux[0][0][0]$a$600 [8:6] $memory\imem_inst.memory$rdmux[0][0][0]$a$600 [4:0] }
      New connections: { $memory\imem_inst.memory$rdmux[0][0][0]$a$600 [19] $memory\imem_inst.memory$rdmux[0][0][0]$a$600 [9] $memory\imem_inst.memory$rdmux[0][0][0]$a$600 [5] } = { $memory\imem_inst.memory$rdmux[0][0][0]$a$600 [15] $memory\imem_inst.memory$rdmux[0][0][0]$a$600 [8] $memory\imem_inst.memory$rdmux[0][0][0]$a$600 [4] }
  Optimizing cells in module \semi_cpu_top.
Performed a total of 42 changes.

44.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

44.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $pmux $flatten\alu_inst.$procmux$417 in front of them:
        $auto$alumacc.cc:485:replace_alu$508
        $auto$alumacc.cc:485:replace_alu$505

    Found cells that share an operand and can be merged by moving the $mux $flatten\pc_inst.$procmux$471 in front of them:
        $auto$alumacc.cc:485:replace_alu$517
        $auto$alumacc.cc:485:replace_alu$520

44.7. Executing OPT_DFF pass (perform DFF optimizations).

44.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..
Removed 0 unused cells and 194 unused wires.
<suppressed ~1 debug messages>

44.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.
<suppressed ~5 debug messages>

44.10. Rerunning OPT passes. (Maybe there is more to do..)

44.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~54 debug messages>

44.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu_top.
    Consolidated identical input bits for $mux cell $auto$opt_share.cc:244:merge_operators$1194:
      Old ports: A=1, B={ \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15] \pc_inst.branch_address [15:11] 5'00000 \pc_inst.branch_address [5] 1'0 \pc_inst.branch_address [3:0] }, Y=$auto$rtlil.cc:2573:Mux$1195
      New ports: A=10'0000000001, B={ \pc_inst.branch_address [15:11] \pc_inst.branch_address [5] \pc_inst.branch_address [3:0] }, Y={ $auto$rtlil.cc:2573:Mux$1195 [15:11] $auto$rtlil.cc:2573:Mux$1195 [5] $auto$rtlil.cc:2573:Mux$1195 [3:0] }
      New connections: { $auto$rtlil.cc:2573:Mux$1195 [31:16] $auto$rtlil.cc:2573:Mux$1195 [10:6] $auto$rtlil.cc:2573:Mux$1195 [4] } = { $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] $auto$rtlil.cc:2573:Mux$1195 [15] 6'000000 }
    New ctrl vector for $pmux cell $flatten\alu_inst.$procmux$417: { $flatten\alu_inst.$procmux$421_CMP $flatten\alu_inst.$procmux$420_CMP $auto$opt_reduce.cc:134:opt_pmux$1199 }
    Consolidated identical input bits for $mux cell $memory\imem_inst.memory$rdmux[0][3][3]$629:
      Old ports: A={ $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [23] $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [23] 1'0 $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [21] $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [23] 2'00 }, B={ $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [21] 1'1 $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [21] 1'0 $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [23] $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [23] 1'1 }, Y={ $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [23] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [12:11] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [7] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [2] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [22] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [0] }
      New ports: A={ $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [23] $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [23] 1'0 $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [21] 2'00 }, B={ $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [21] 1'1 $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [21] 1'0 $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [23] 1'1 }, Y={ $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [23] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [12:11] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [7] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [22] $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [0] }
      New connections: $memory\imem_inst.memory$rdmux[0][2][1]$b$613 [2] = $memory\imem_inst.memory$rdmux[0][3][1]$a$624 [23]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$1198: { $flatten\alu_inst.$procmux$423_CMP $flatten\alu_inst.$procmux$422_CMP $flatten\alu_inst.$procmux$419_CMP $flatten\alu_inst.$procmux$418_CMP }
  Optimizing cells in module \semi_cpu_top.
Performed a total of 4 changes.

44.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

44.14. Executing OPT_SHARE pass.

44.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\rf_inst.registers[9]$710 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[9]).
Adding EN signal on $memory\rf_inst.registers[8]$708 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[8]).
Adding EN signal on $memory\rf_inst.registers[7]$706 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[7]).
Adding EN signal on $memory\rf_inst.registers[6]$704 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[6]).
Adding EN signal on $memory\rf_inst.registers[5]$702 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[5]).
Adding EN signal on $memory\rf_inst.registers[4]$700 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[4]).
Adding EN signal on $memory\rf_inst.registers[3]$698 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[3]).
Adding EN signal on $memory\rf_inst.registers[31]$754 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[31]).
Adding EN signal on $memory\rf_inst.registers[30]$752 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[30]).
Adding EN signal on $memory\rf_inst.registers[2]$696 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[2]).
Adding EN signal on $memory\rf_inst.registers[29]$750 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[29]).
Adding EN signal on $memory\rf_inst.registers[28]$748 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[28]).
Adding EN signal on $memory\rf_inst.registers[27]$746 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[27]).
Adding EN signal on $memory\rf_inst.registers[26]$744 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[26]).
Adding EN signal on $memory\rf_inst.registers[25]$742 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[25]).
Adding EN signal on $memory\rf_inst.registers[24]$740 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[24]).
Adding EN signal on $memory\rf_inst.registers[23]$738 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[23]).
Adding EN signal on $memory\rf_inst.registers[22]$736 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[22]).
Adding EN signal on $memory\rf_inst.registers[21]$734 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[21]).
Adding EN signal on $memory\rf_inst.registers[20]$732 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[20]).
Adding EN signal on $memory\rf_inst.registers[1]$694 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[1]).
Adding EN signal on $memory\rf_inst.registers[19]$730 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[19]).
Adding EN signal on $memory\rf_inst.registers[18]$728 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[18]).
Adding EN signal on $memory\rf_inst.registers[17]$726 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[17]).
Adding EN signal on $memory\rf_inst.registers[16]$724 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[16]).
Adding EN signal on $memory\rf_inst.registers[15]$722 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[15]).
Adding EN signal on $memory\rf_inst.registers[14]$720 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[14]).
Adding EN signal on $memory\rf_inst.registers[13]$718 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[13]).
Adding EN signal on $memory\rf_inst.registers[12]$716 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[12]).
Adding EN signal on $memory\rf_inst.registers[11]$714 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[11]).
Adding EN signal on $memory\rf_inst.registers[10]$712 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[10]).
Adding EN signal on $memory\rf_inst.registers[0]$692 ($dff) from module semi_cpu_top (D = \alu_inst.result, Q = \rf_inst.registers[0]).

44.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..
Removed 33 unused cells and 36 unused wires.
<suppressed ~34 debug messages>

44.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

44.18. Rerunning OPT passes. (Maybe there is more to do..)

44.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

44.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu_top.
Performed a total of 0 changes.

44.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

44.22. Executing OPT_SHARE pass.

44.23. Executing OPT_DFF pass (perform DFF optimizations).

44.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..

44.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

44.26. Finished OPT passes. (There is nothing left to do.)

45. Executing TECHMAP pass (map to technology primitives).

45.1. Executing Verilog-2005 frontend: /nix/store/hj1kx74hfma2i9hkg584hkva4xjf5mmb-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nix/store/hj1kx74hfma2i9hkg584hkva4xjf5mmb-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

45.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$70d30c21ff772b34d0d1da2801fbd781dc3c70e4\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$335cfd09f1afa8139c4aafcbbe5f361887b79c5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_90_alu for cells of type $alu.
Using template $paramod$33afdd83bf3811dac2de7a968d39eea5718691bc\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $eqx.
Using extmapper simplemap for cells of type $reduce_xor.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~2195 debug messages>

46. Executing OPT pass (performing simple optimizations).

46.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.
<suppressed ~730 debug messages>

46.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
<suppressed ~252 debug messages>
Removed a total of 84 cells.

46.3. Executing OPT_DFF pass (perform DFF optimizations).

46.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..
Removed 387 unused cells and 714 unused wires.
<suppressed ~388 debug messages>

46.5. Finished fast OPT passes.

47. Executing ABC pass (technology mapping using ABC).

47.1. Extracting gate netlist of module `\semi_cpu_top' to `<abc-temp-dir>/input.blif'..
Extracted 3467 gates and 4514 wires to a netlist network with 1045 inputs and 112 outputs.

47.1.1. Executing ABC.
Running ABC command: "/nix/store/8822vi15d8b1mss0196a93yfdyhqsp8z-yosys-abc/bin/abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

47.1.2. Re-integrating ABC results.
ABC RESULTS:              XNOR cells:       34
ABC RESULTS:               MUX cells:     2337
ABC RESULTS:               NOT cells:     1066
ABC RESULTS:               NOR cells:       60
ABC RESULTS:             ORNOT cells:       69
ABC RESULTS:              NAND cells:       36
ABC RESULTS:                OR cells:      359
ABC RESULTS:            ANDNOT cells:      364
ABC RESULTS:               AND cells:       31
ABC RESULTS:               XOR cells:       78
ABC RESULTS:        internal signals:     3357
ABC RESULTS:           input signals:     1045
ABC RESULTS:          output signals:      112
Removing temp directory.

48. Executing OPT pass (performing simple optimizations).

48.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.
<suppressed ~274 debug messages>

48.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

48.3. Executing OPT_DFF pass (perform DFF optimizations).

48.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..
Removed 0 unused cells and 1571 unused wires.
<suppressed ~19 debug messages>

48.5. Finished fast OPT passes.

49. Executing HIERARCHY pass (managing design hierarchy).

49.1. Analyzing design hierarchy..
Top module:  \semi_cpu_top

49.2. Analyzing design hierarchy..
Top module:  \semi_cpu_top
Removed 0 unused modules.
Module semi_cpu_top directly or indirectly displays text -> setting "keep" attribute.

50. Printing statistics.

=== semi_cpu_top ===

   Number of wires:               4459
   Number of wire bits:           6354
   Number of public wires:          96
   Number of public wire bits:    1967
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5479
     $_ANDNOT_                     363
     $_AND_                         31
     $_DFFE_PP_                   1024
     $_DFF_P_                       14
     $_MUX_                       2337
     $_NAND_                        36
     $_NOR_                         60
     $_NOT_                       1066
     $_ORNOT_                       69
     $_OR_                         359
     $_SDFFE_PP0P_                   5
     $_XNOR_                        34
     $_XOR_                         78
     $print                          3

51. Executing CHECK pass (checking for obvious problems).
Checking module semi_cpu_top...
Found and reported 0 problems.

52. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/semi_cpu_top/runs/RUN_2025.06.08_00.13.34/tmp/synthesis/post_techmap.dot'.
Dumping module semi_cpu_top to page 1.

53. Executing SHARE pass (SAT-based resource sharing).

54. Executing OPT pass (performing simple optimizations).

54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu_top.
Performed a total of 0 changes.

54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

54.6. Executing OPT_DFF pass (perform DFF optimizations).

54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..
Removed 5427 unused cells and 4387 unused wires.
<suppressed ~5473 debug messages>

54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

54.9. Rerunning OPT passes. (Maybe there is more to do..)

54.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

54.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu_top.
Performed a total of 0 changes.

54.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu_top'.
Removed a total of 0 cells.

54.13. Executing OPT_DFF pass (perform DFF optimizations).

54.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..

54.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu_top.

54.16. Finished OPT passes. (There is nothing left to do.)

55. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..
Removed 0 unused cells and 43 unused wires.
<suppressed ~43 debug messages>

56. Printing statistics.

=== semi_cpu_top ===

   Number of wires:                 29
   Number of wire bits:             78
   Number of public wires:           8
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 49
     $_ANDNOT_                       3
     $_AND_                          5
     $_DFF_P_                       12
     $_NAND_                         4
     $_NOT_                          3
     $_ORNOT_                        2
     $_OR_                          10
     $_XOR_                         10

mapping tbuf

57. Executing TECHMAP pass (map to technology primitives).

57.1. Executing Verilog-2005 frontend: /Users/berkkilic/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/Users/berkkilic/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

57.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

58. Executing SIMPLEMAP pass (map simple cells to gate primitives).

59. Executing TECHMAP pass (map to technology primitives).

59.1. Executing Verilog-2005 frontend: /Users/berkkilic/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/Users/berkkilic/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

59.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

60. Executing SIMPLEMAP pass (map simple cells to gate primitives).

61. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

61.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\semi_cpu_top':
  mapped 12 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

62. Printing statistics.

=== semi_cpu_top ===

   Number of wires:                 29
   Number of wire bits:             78
   Number of public wires:           8
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 49
     $_ANDNOT_                       3
     $_AND_                          5
     $_NAND_                         4
     $_NOT_                          3
     $_ORNOT_                        2
     $_OR_                          10
     $_XOR_                         10
     sky130_fd_sc_hd__dfxtp_2       12

[INFO]: USING STRATEGY AREA 0

63. Executing ABC pass (technology mapping using ABC).

63.1. Extracting gate netlist of module `\semi_cpu_top' to `/tmp/yosys-abc-ordvED/input.blif'..
Extracted 37 gates and 49 wires to a netlist network with 12 inputs and 20 outputs.

63.1.1. Executing ABC.
Running ABC command: "/nix/store/8822vi15d8b1mss0196a93yfdyhqsp8z-yosys-abc/bin/abc" -s -f /tmp/yosys-abc-ordvED/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-ordvED/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-ordvED/input.blif 
ABC: + read_lib -w /openlane/designs/semi_cpu_top/runs/RUN_2025.06.08_00.13.34/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.04 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/semi_cpu_top/runs/RUN_2025.06.08_00.13.34/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.06 sec
ABC: Memory =    9.54 MB. Time =     0.06 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/semi_cpu_top/runs/RUN_2025.06.08_00.13.34/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/semi_cpu_top/runs/RUN_2025.06.08_00.13.34/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 10000 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 10000 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 10000 
ABC: Current delay (1026.00 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     39 ( 25.6 %)   Cap = 18.8 ff (  5.8 %)   Area =      310.30 ( 74.4 %)   Delay =  1243.89 ps  ( 15.4 %)               
ABC: Path  0 --       4 : 0    5 pi                       A =   0.00  Df =  70.4  -38.3 ps  S = 104.6 ps  Cin =  0.0 ff  Cout =  21.6 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      54 : 4    1 sky130_fd_sc_hd__and4_2  A =  10.01  Df = 270.0  -54.4 ps  S =  47.3 ps  Cin =  1.5 ff  Cout =   2.2 ff  Cmax = 300.3 ff  G =  138  
ABC: Path  2 --      55 : 1    6 sky130_fd_sc_hd__buf_1   A =   3.75  Df = 518.3 -135.6 ps  S = 286.1 ps  Cin =  2.1 ff  Cout =  23.8 ff  Cmax = 130.0 ff  G = 1084  
ABC: Path  3 --      64 : 4    2 sky130_fd_sc_hd__and4_2  A =  10.01  Df = 819.1 -158.4 ps  S =  88.1 ps  Cin =  1.5 ff  Cout =  10.1 ff  Cmax = 300.3 ff  G =  639  
ABC: Path  4 --      66 : 2    1 sky130_fd_sc_hd__and2b_2 A =   8.76  Df =1030.2 -168.5 ps  S =  33.8 ps  Cin =  1.6 ff  Cout =   2.2 ff  Cmax = 310.4 ff  G =  132  
ABC: Path  5 --      67 : 1    1 sky130_fd_sc_hd__buf_1   A =   3.75  Df =1243.9  -63.7 ps  S = 396.1 ps  Cin =  2.1 ff  Cout =  33.4 ff  Cmax = 130.0 ff  G = 1590  
ABC: Start-point = pi3 (\display_inst.clk_div [0]).  End-point = po15 ($auto$alumacc.cc:485:replace_alu$511.Y [7]).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   12/   20  lat =    0  nd =    39  edge =     86  area =310.34  delay = 5.00  lev = 5
ABC: + write_blif /tmp/yosys-abc-ordvED/output.blif 

63.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:        3
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       20
Removing temp directory.

64. Executing SETUNDEF pass (replace undef values with defined constants).

65. Executing HILOMAP pass (mapping to constant drivers).

66. Executing SPLITNETS pass (splitting up multi-bit signals).

67. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu_top..
Removed 0 unused cells and 75 unused wires.
<suppressed ~4 debug messages>

68. Executing INSBUF pass (insert buffer cells for connected wires).

69. Executing CHECK pass (checking for obvious problems).
Checking module semi_cpu_top...
Found and reported 0 problems.

70. Printing statistics.

=== semi_cpu_top ===

   Number of wires:                 48
   Number of wire bits:             61
   Number of public wires:          17
   Number of public wire bits:      30
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 58
     sky130_fd_sc_hd__a21oi_2        2
     sky130_fd_sc_hd__a41o_2         1
     sky130_fd_sc_hd__and2_2         1
     sky130_fd_sc_hd__and2b_2        1
     sky130_fd_sc_hd__and3_2         2
     sky130_fd_sc_hd__and4_2         2
     sky130_fd_sc_hd__buf_1          8
     sky130_fd_sc_hd__conb_1         7
     sky130_fd_sc_hd__dfxtp_2       12
     sky130_fd_sc_hd__inv_2          2
     sky130_fd_sc_hd__nand2_2        3
     sky130_fd_sc_hd__nand3_2        2
     sky130_fd_sc_hd__nor2_2         4
     sky130_fd_sc_hd__or2_2          1
     sky130_fd_sc_hd__or3_2          2
     sky130_fd_sc_hd__or3b_2         3
     sky130_fd_sc_hd__xor2_2         5

   Chip area for module '\semi_cpu_top': 591.817600

71. Executing Verilog backend.
Dumping module `\semi_cpu_top'.

72. Executing JSON backend.

End of script. Logfile hash: f18d28a0ab, CPU: user 1.05s system 0.03s, MEM: 42.11 MB peak
Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)
Time spent: 21% 2x abc (0 sec), 17% 31x opt_expr (0 sec), ...
